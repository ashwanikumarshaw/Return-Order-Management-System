<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.fse.Authorization.entity.JwtRequest"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="com.fse.Authorization.entity.UserDao"/>
    <fullyQualifiedTypeName name="com.fse.Authorization.util.JwtUtil"/>
    <fullyQualifiedTypeName name="com.fse.Authorization.dto.JwtRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.DisabledException"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.BadCredentialsException"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="com.fse.Authorization.repository.UserDao"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="javax.persistence.ManyToOne"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
    <fullyQualifiedTypeName name="com.fse.Authorization.dto.JwtResponse"/>
    <fullyQualifiedTypeName name="javax.persistence.OneToMany"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="javax.persistence.FetchType"/>
    <fullyQualifiedTypeName name="javax.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinTable"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestHeader"/>
    <fullyQualifiedTypeName name="com.youtube.jwt.exception.TokenInvalidException"/>
    <fullyQualifiedTypeName name="com.fse.Authorization.entity.Role"/>
    <fullyQualifiedTypeName name="com.fse.Authorization.entity.User"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Lazy"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestAttribute"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="com.fse.Authorization.exception.TokenInvalidException"/>
    <fullyQualifiedTypeName name="com.fse.ReturnOrderManagementSystem.entity.DefectiveComponentDetail"/>
    <fullyQualifiedTypeName name="com.fse.ReturnOrderManagementSystem.util.ComponentType"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="com.fse.ReturnOrderManagementSystem.exception.NotFoundException"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="jdk.jfr.Enabled"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonSubTypes.Type"/>
    <fullyQualifiedTypeName name="org.junit.Test"/>
</qualifiedTypeNameHistroy>
